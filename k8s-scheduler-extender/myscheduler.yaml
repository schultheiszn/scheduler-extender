apiVersion: v1
kind: ServiceAccount
metadata:
  name: myscheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: myscheduler-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-scheduler
subjects:
- kind: ServiceAccount
  name: myscheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: myscheduler-volume-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:volume-scheduler
subjects:
- kind: ServiceAccount
  name: myscheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: myscheduler-config-role-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: myscheduler
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: scheduler
    tier: control-plane
  name: myscheduler
  namespace: kube-system
spec:
  selector:
    matchLabels:
      component: scheduler
      tier: control-plane
  replicas: 1
  template:
    metadata:
      labels:
        component: scheduler
        tier: control-plane
        version: second
    spec:
      serviceAccountName: myscheduler
      containers:
      - command: 
        name: myscheduler-extender
        image: gcr.io/banzaicloud-scheduler/scheduler-extender-small:1.0
        imagePullPolicy: Always
        ports:
          - containerPort: 8888
      - command:
        - /usr/local/bin/kube-scheduler
        - -v=1
        - --address=0.0.0.0
        - --leader-elect=false
        - --policy-configmap=myscheduler-config
        - --policy-configmap-namespace=kube-system
        - --lock-object-namespace=kube-system
        - --lock-object-name=myscheduler
        - --scheduler-name=myscheduler
        image: gcr.io/banzaicloud-scheduler/scheduler:2.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10251
          initialDelaySeconds: 15
        name: myscheduler-scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10251
        resources:
          requests:
            cpu: '0.1'
        securityContext:
          privileged: false
        volumeMounts: []
      hostNetwork: false
      hostPID: false
      volumes: []
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: myscheduler-config
  namespace: kube-system
data:
  policy.cfg: |
    {"kind":"Policy","apiVersion":"v1","extenders":[{"urlPrefix":"http://localhost:8888","filterVerb":"filter","prioritizeVerb":"prioritize","weight":1,"enableHttps":false,"nodeCacheCapable":false}]}
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1alpha1
    kind: KubeSchedulerConfiguration
    schedulerName: myscheduler
    algorithmSource:
      policy:
        file:
          path: "/scheduler-extender-policy.json"
          #configMap:
          #namespace: kube-system
          #name: myscheduler-policy
    leaderElection:
      leaderElect: true
      lockObjectName: myscheduler
      lockObjectNamespace: kube-system

